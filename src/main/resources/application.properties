# Binding health checks to an internal port
management.port=8081

# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

# The name of the kie server (this should correspond to the kubernetes service name).
kieserver.service=kie-app

# The target container and the related endpoint
kieserver.container=xavier-analytics_0.0.1-SNAPSHOT
kieserver.path=services/rest/server/containers/instances/${kieserver.container}

# Username and password for basic authentication
# These properties are better suited to be overridden using secrets
kieserver.username=executionUser
kieserver.password=rksxsp2!

# Use the property to set the address of the kie server when running the app from the workstation machine.
# The property is activated when the environment variables KIE_APP_SERVICE_HOST and KIE_APP_SERVICE_PORT are not present
# (i.e. outside Kubernetes/Openshift).
kieserver.devel-service=myapp-kieserver-rhdm73-authoring.127.0.0.1.nip.io:80

postgresql.service.name=postgresql
postgresql.service.port=postgresql
postgresql.database=sampledb

# Spring JDBC configuration
spring.datasource.name=postgresql
spring.datasource.url=jdbc:postgresql://${postgresql.service.name}:${postgresql.service.port}/${postgresql.database}
spring.datasource.username=${postgresql.user}
spring.datasource.password=${postgresql.password}

# Spring Data JPA configuration
# To be updated in real production usage!
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect
camel.dataformat.json-jackson.disable-features=WRITE_DATES_AS_TIMESTAMPS
# AMQ Broker configuration
amq.server=broker-amq-tcp.rhdm73-authoring.svc
amq.port=61616

# Sample InputDataModel generator
sig.autoStartup=false

#Insights kafka
insights.service=xavier
insights.category=cloudforms
insights.kafka.host=192.168.1.44:29092
insights.kafka.upload.topic=platform.upload.${insights.service}
insights.kafka.validation.topic=platform.upload.validation

#Insights upload
insights.upload.host=192.168.1.44:8080
insights.upload.mimetype=application/vnd.redhat.${insights.service}.${insights.category}+json
insights.upload.accountnumber=123454

# Camel configuration
# tracing enabled?
camel.springboot.tracing=false

# REST Endpoints configuration
api.version = v1.0
camel.component.servlet.mapping.context-path=/api/xavier/${api.version}/*
# WIR parallel creation
parallel.wir=true

insights.properties=yearOverYearGrowthRatePercentage,percentageOfHypervisorsMigratedOnYear1,percentageOfHypervisorsMigratedOnYear2,percentageOfHypervisorsMigratedOnYear3,reportName,reportDescription

cloudforms.manifest.1_0_0.datacollectedon=$.data_collected_on
cloudforms.manifest.1_0_0.hypervisor=$.ManageIQ::Providers::Vmware::InfraManager[*].hosts[?(@.cpu_total_cores != null)]
cloudforms.manifest.1_0_0.hypervisor.cpuTotalCoresPath=cpu_total_cores
cloudforms.manifest.1_0_0.hypervisor.cpuCoresPerSocketPath=cpu_cores_per_socket
cloudforms.manifest.1_0_0.totalSpacePath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[*].hardware.disks[?(@.size != null)].size

cloudforms.manifest.1_0_0.vmworkloadinventory.vmPath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.retired == null )]

cloudforms.manifest.1_0_0.vmworkloadinventory.providerPath=$.ManageIQ::Providers::Vmware::InfraManager[?(@.vms[?(@.id=={id})])].name
cloudforms.manifest.1_0_0.vmworkloadinventory.vmEmsClusterPath =$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id=={id})].host.ems_ref
cloudforms.manifest.1_0_0.vmworkloadinventory.emsClusterIdPath =$.ManageIQ::Providers::Vmware::InfraManager[*].hosts[?(@.ems_ref == "{vmEmsCluster}")].ems_cluster.ems_ref
cloudforms.manifest.1_0_0.vmworkloadinventory.datacenterPath=$.ManageIQ::Providers::Vmware::InfraManager[*].ems_clusters[?(@.ems_ref == "{ems_cluster_id}")].v_parent_datacenter
cloudforms.manifest.1_0_0.vmworkloadinventory.clusterPath=$.ManageIQ::Providers::Vmware::InfraManager[*].ems_clusters[?(@.ems_ref == "{ems_cluster_id}")].name

cloudforms.manifest.1_0_0.vmworkloadinventory.guestOSPath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].operating_system.product_name
cloudforms.manifest.1_0_0.vmworkloadinventory.guestOSFallbackPath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].hardware.guest_os_full_name
cloudforms.manifest.1_0_0.vmworkloadinventory.vmNamePath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].name
cloudforms.manifest.1_0_0.vmworkloadinventory.numCpuPath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].cpu_total_cores
cloudforms.manifest.1_0_0.vmworkloadinventory.numCoresPerSocketPath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].cpu_cores_per_socket
cloudforms.manifest.1_0_0.vmworkloadinventory.hasRDMDiskPath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].has_rdm_disk
cloudforms.manifest.1_0_0.vmworkloadinventory.memoryHotAddEnabledPath=memory_hot_add_enabled
cloudforms.manifest.1_0_0.vmworkloadinventory.cpuHotAddEnabledPath=cpu_hot_add_enabled
cloudforms.manifest.1_0_0.vmworkloadinventory.cpuHotRemoveEnabledPath=cpu_hot_remove_enabled
cloudforms.manifest.1_0_0.vmworkloadinventory.ramSizeInBytesPath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].ram_size_in_bytes
cloudforms.manifest.1_0_0.vmworkloadinventory.cpuAffinityPath=cpu_affinity
cloudforms.manifest.1_0_0.vmworkloadinventory.nicsPath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].hardware.nics.length()
cloudforms.manifest.1_0_0.vmworkloadinventory.productNamePath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].operating_system.product_type
cloudforms.manifest.1_0_0.vmworkloadinventory.productNameFallbackPath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].hardware.guest_os_full_name
cloudforms.manifest.1_0_0.vmworkloadinventory.diskSizePath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].hardware.disks[*].size_on_disk
cloudforms.manifest.1_0_0.vmworkloadinventory.usedDiskSpacePath=used_disk_storage
cloudforms.manifest.1_0_0.vmworkloadinventory.systemServicesNamesPath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].system_services[*].name
cloudforms.manifest.1_0_0.vmworkloadinventory.vmDisksPath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].hardware.disks[*]
cloudforms.manifest.1_0_0.vmworkloadinventory.vmDisksFileNameProperty=filename
cloudforms.manifest.1_0_0.vmworkloadinventory.vmDisksDeviceTypeProperty=device_type
cloudforms.manifest.1_0_0.vmworkloadinventory.vmDiskFileNamesPath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].hardware.disks[*].filename
cloudforms.manifest.1_0_0.vmworkloadinventory.filesContentPath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].files
cloudforms.manifest.1_0_0.vmworkloadinventory.filesContentPathName=name
cloudforms.manifest.1_0_0.vmworkloadinventory.filesContentPathContents=contents
cloudforms.manifest.1_0_0.vmworkloadinventory.hasUSBcontroller=has_usb_controller
cloudforms.manifest.1_0_0.vmworkloadinventory.hasPassthroughDevice=has_passthrough_device
cloudforms.manifest.1_0_0.vmworkloadinventory.hasVmAffinityConfig=has_vm_affinity_config
cloudforms.manifest.1_0_0.vmworkloadinventory.numaNodeAffinity=numa_node_affinity
cloudforms.manifest.1_0_0.vmworkloadinventory.firmware=firmware
cloudforms.manifest.1_0_0.vmworkloadinventory.hasVmDrsConfig=has_vm_drs_config
cloudforms.manifest.1_0_0.vmworkloadinventory.hasVmHaConfig=has_vm_ha_config
cloudforms.manifest.1_0_0.vmworkloadinventory.balloonedMemory=ballooned_memory
cloudforms.manifest.1_0_0.vmworkloadinventory.hasEncryptedDisk=has_encrypted_disk
cloudforms.manifest.1_0_0.vmworkloadinventory.hasOpaqueNetwork=has_opaque_network
cloudforms.manifest.1_0_0.vmworkloadinventory.hasSrIovNic=has_sriov_nic

cloudforms.manifest.1_0_0.vmworkloadinventory.productPath=$.ManageIQ::Providers::Vmware::InfraManager[?(@.vms[?(@.id=={id})])].emstype_description
cloudforms.manifest.1_0_0.vmworkloadinventory.versionPath=$.ManageIQ::Providers::Vmware::InfraManager[?(@.vms[?(@.id=={id})])].api_version
cloudforms.manifest.1_0_0.vmworkloadinventory.hostNamePath=$.ManageIQ::Providers::Vmware::InfraManager[*].vms[?(@.id == {id})].host.ems_ref

cloudforms.manifest.0.hypervisor=$.ManageIQ::Providers::Vmware::InfraManager.hosts[?(@.cpu_total_cores != null)]
cloudforms.manifest.0.hypervisor.cpuTotalCoresPath=cpu_total_cores
cloudforms.manifest.0.hypervisor.cpuCoresPerSocketPath=cpu_cores_per_socket
cloudforms.manifest.0.totalSpacePath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[*].hardware.disks[?(@.size != null)].size

cloudforms.manifest.0.vmworkloadinventory.vmPath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.archived == false && @.orphaned == false && @.retired == null )]
cloudforms.manifest.0.vmworkloadinventory.providerPath=$.ManageIQ::Providers::Vmware::InfraManager.name
cloudforms.manifest.0.vmworkloadinventory.vmEmsClusterPath =$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id=={id})].host_id
cloudforms.manifest.0.vmworkloadinventory.emsClusterIdPath =$.ManageIQ::Providers::Vmware::InfraManager.hosts[?(@.id == {vmEmsCluster})].ems_cluster_id
cloudforms.manifest.0.vmworkloadinventory.datacenterPath=$.ManageIQ::Providers::Vmware::InfraManager.ems_clusters[?(@.id == {ems_cluster_id})].v_parent_datacenter
cloudforms.manifest.0.vmworkloadinventory.clusterPath=$.ManageIQ::Providers::Vmware::InfraManager.ems_clusters[?(@.id == {ems_cluster_id})].name
cloudforms.manifest.0.vmworkloadinventory.guestOSPath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].operating_system.product_name
cloudforms.manifest.0.vmworkloadinventory.guestOSFallbackPath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].hardware.guest_os_full_name
cloudforms.manifest.0.vmworkloadinventory.vmNamePath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].name
cloudforms.manifest.0.vmworkloadinventory.numCpuPath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].num_cpu
# TODO fix this JSONPath
cloudforms.manifest.0.vmworkloadinventory.numCoresPerSocketPath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].num_cpu
cloudforms.manifest.0.vmworkloadinventory.hasRDMDiskPath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].has_rdm_disk
cloudforms.manifest.0.vmworkloadinventory.ramSizeInBytesPath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].ram_size_in_bytes
cloudforms.manifest.0.vmworkloadinventory.nicsPath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].hardware.nics.length()
cloudforms.manifest.0.vmworkloadinventory.productNamePath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].operating_system.product_type
cloudforms.manifest.0.vmworkloadinventory.productNameFallbackPath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].hardware.guest_os_full_name
cloudforms.manifest.0.vmworkloadinventory.diskSizePath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].hardware.disks[*].size_on_disk
cloudforms.manifest.0.vmworkloadinventory.systemServicesNamesPath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].system_services[*].name
cloudforms.manifest.0.vmworkloadinventory.vmDisksPath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].hardware.disks[*]
cloudforms.manifest.0.vmworkloadinventory.vmDisksFileNameProperty=filename
cloudforms.manifest.0.vmworkloadinventory.vmDisksDeviceTypeProperty=device_type
cloudforms.manifest.0.vmworkloadinventory.vmDiskFileNamesPath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].hardware.disks[*].filename
cloudforms.manifest.0.vmworkloadinventory.filesContentPath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[*].vms[?(@.id == {id})].files
cloudforms.manifest.0.vmworkloadinventory.filesContentPathName=name
cloudforms.manifest.0.vmworkloadinventory.filesContentPathContents=contents

cloudforms.manifest.0.vmworkloadinventory.productPath=$.ManageIQ::Providers::Vmware::InfraManager.emstype_description
cloudforms.manifest.0.vmworkloadinventory.versionPath=$.ManageIQ::Providers::Vmware::InfraManager.api_version
cloudforms.manifest.0.vmworkloadinventory.hostNamePath=$.ManageIQ::Providers::Vmware::InfraManager.hosts[?(@.id == {host_id})].hostname

rest.authorization.administration=

S3_BUCKET=xavier-dev
S3_ACCESS_KEY_ID=NONE
S3_SECRET_ACCESS_KEY=NONE
S3_REGION=US_EAST_1
s3.download.link.expiration=5000

insights.rbac.host=http://localhost:8111
insights.rbac.path=/api/rbac/v1/access/
insights.rbac.applicationName=migration-analytics

# Pagination config
pagination.limit.max=1000

flyway.baseline-on-migrate=true
flyway.locations = classpath:/db/migration
flyway.baseline-version=0.1