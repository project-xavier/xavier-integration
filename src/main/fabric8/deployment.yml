kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: analytics-integration
spec:
  triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - analytics-integration
        from:
          kind: ImageStreamTag
          name: analytics-integration:latest
  replicas: 1
  selector:
    deploymentconfig: analytics-integration
  template:
    metadata:
      labels:
        deploymentconfig: analytics-integration
    spec:
      containers:
        - name: analytics-integration
          image: library/analytics-integration:latest
          ports:
            - name: jolokia
              containerPort: 8778
              protocol: TCP
            - name: rest
              containerPort: 8080
              protocol: TCP
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KIESERVER_SERVICE
              value: analytics-kieserver
            - name: KIESERVER_USERNAME
              value: executionUser
            - name: KIESERVER_PASSWORD
              value: rksxsp2!
            - name: KIESERVER_PATH
              value: services/rest/server/containers/instances/${kieserver.container}
            - name: KIESERVER_CONTAINER
              value: sample-analytics_1.0.0-SNAPSHOT
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: "postgresql"
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "postgresql"
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: "postgresql"
                  key: database-name
            - name: AMQ_SERVER
              value: broker-amq-tcp
          resources:
            limits:
              cpu: '1'
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: "/health"
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: "/health"
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: Always
